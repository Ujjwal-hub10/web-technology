"use strict";(globalThis.webpackChunkcalypso=globalThis.webpackChunkcalypso||[]).push([[52203],{"../packages/shopping-cart/src/cart-keys.ts":(t,e,r)=>{r.d(e,{e:()=>o});const o=["no-user"]},"../packages/shopping-cart/src/create-request-cart-product.ts":(t,e,r)=>{function o(t){if(!t.product_slug)throw new Error("product_slug is required for request cart products");const{product_slug:e,product_id:r,meta:o,volume:n,quantity:a,extra:i}=t;return{product_slug:e,product_id:r,meta:o??"",volume:n??1,quantity:a??null,extra:i??{}}}function n(t){return t.map(o)}r.d(e,{Z:()=>o,A:()=>n})},"../packages/shopping-cart/src/shopping-cart-manager.ts":(t,e,r)=>{r.d(e,{k:()=>H});var o=r("../node_modules/debug/src/browser.js"),n=r.n(o);const a=n()("shopping-cart:cart-functions");let i=100;const s={blog_id:"",create_new_blog:!1,cart_generated_at_timestamp:0,cart_key:"no-site",products:[],total_tax:"0",total_tax_integer:0,total_tax_breakdown:[],total_cost:0,total_cost_integer:0,coupon_savings_total_integer:0,sub_total_with_taxes_integer:0,sub_total_integer:0,currency:"USD",credits_integer:0,allowed_payment_methods:[],coupon:"",is_coupon_applied:!1,coupon_discounts_integer:[],locale:"en-us",tax:{location:{},display_taxes:!1},is_signup:!1,next_domain_is_free:!1,next_domain_condition:""};function c(t){const{product_slug:e,meta:r,product_id:o,extra:n,volume:a,quantity:i}=t;return{product_slug:e,meta:r,volume:a,quantity:i,product_id:o,extra:n}}function u(t){return{...t,products:t.products.filter(d)}}function d(t){return"uuid"in t}function p(t,e){return{...t,products:t.products.filter((t=>!d(t)||t.uuid!==e))}}function l(t,e){return{...t,coupon:e,is_coupon_applied:!1}}function _(t,e){return{...t,tax:{...t.tax,location:{country_code:e.countryCode||void 0,postal_code:e.postalCode||void 0,subdivision_code:e.subdivisionCode||void 0,vat_id:e.vatId||void 0,organization:e.organization||void 0,address:e.address||void 0,city:e.city||void 0}}}}function g(t){if("object"!=typeof t||null===t)return s;let e={};t.tax?.location&&(e=Array.isArray(t.tax.location)?{}:t.tax.location);const r=t.products?.length&&Array.isArray(t.products)?t.products:[];return{...s,...t,tax:{location:e,display_taxes:t.tax?.display_taxes??!1},products:r.filter(E).map((t=>({...t,uuid:t.product_slug+i++})))}}function E(t){return"wordpress-com-credits"!==t.product_slug}function h(t,e){return{...t,products:[...e]}}function C(t,e,r){return{...t,products:t.products.map((t=>d(t)&&t.uuid===e?{...t,...r}:t))}}var y=r("../node_modules/@babel/runtime/helpers/esm/defineProperty.js");class v extends Error{constructor(t,e){super(t),(0,y.Z)(this,"code",void 0),this.code=e}}class R extends v{}class f extends v{}const m=n()("shopping-cart:managers");function T(t){const{cacheStatus:e,queuedActions:r,couponStatus:o,loadingErrorType:n,loadingError:a,lastValidResponseCart:i}=t,s="fresh"===e||"fresh-pending"===e,c=r.length>0||"valid"!==e,u="error"===e?a:null;return m("manager isLoading",s,"isPendingUpdate",c,"loadingError",u),{isLoading:s,loadingError:u,loadingErrorType:n,isPendingUpdate:c,couponStatus:o,responseCart:i}}const S={blog_id:"",create_new_blog:!1,cart_generated_at_timestamp:0,cart_key:"no-site",products:[],total_tax:"0",total_tax_integer:0,total_tax_breakdown:[],total_cost:0,total_cost_integer:0,coupon_savings_total_integer:0,sub_total_with_taxes_integer:0,sub_total_integer:0,currency:"USD",credits_integer:0,allowed_payment_methods:[],coupon:"",is_coupon_applied:!1,coupon_discounts_integer:[],locale:"en-us",tax:{location:{},display_taxes:!1},is_signup:!1,next_domain_is_free:!1,next_domain_condition:""},A=()=>Promise.reject("Cart actions cannot be taken without a cart key."),b={isLoading:!0,loadingError:void 0,loadingErrorType:void 0,isPendingUpdate:!0,couponStatus:"fresh",responseCart:S},P={actions:{addProductsToCart:A,removeProductFromCart:A,applyCoupon:A,removeCoupon:A,updateLocation:A,replaceProductInCart:A,replaceProductsInCart:A,reloadFromServer:()=>Promise.resolve(S),clearMessages:()=>Promise.resolve(S)},getState:()=>b,subscribe:()=>()=>null,fetchInitialCart:()=>Promise.resolve(S)};var x=r("../packages/shopping-cart/src/create-request-cart-product.ts");const w=n()("shopping-cart:shopping-cart-reducer"),I={blog_id:"",create_new_blog:!1,cart_generated_at_timestamp:0,cart_key:"no-site",products:[],total_tax:"0",total_tax_integer:0,total_tax_breakdown:[],total_cost:0,total_cost_integer:0,coupon_savings_total_integer:0,sub_total_with_taxes_integer:0,sub_total_integer:0,currency:"USD",credits_integer:0,allowed_payment_methods:[],coupon:"",is_coupon_applied:!1,coupon_discounts_integer:[],locale:"en-us",tax:{location:{},display_taxes:!1},is_signup:!1,next_domain_is_free:!1,next_domain_condition:""},O=["RECEIVE_INITIAL_RESPONSE_CART","RECEIVE_UPDATED_RESPONSE_CART","FETCH_INITIAL_RESPONSE_CART","RAISE_ERROR"],D=["fresh","pending","fresh-pending"],L=["invalid","fresh","pending","fresh-pending"];function U(t){return t.queuedActions.length>0||"valid"!==t.cacheStatus}function k(t,e){if(L.includes(t.cacheStatus)&&"CART_RELOAD"===e.type)return w("cart is pending an operation; ignoring reload action"),t;if(function(t,e){return!O.includes(e.type)&&!!D.includes(t)}(t.cacheStatus,e))return w("cart has not yet loaded; queuing requested action",e),{...t,queuedActions:[...t.queuedActions,e]};const r=t;if(function(t){return t.queuedActions.length>0&&"valid"===t.cacheStatus}(t=N(t,e))){w("playing queued actions",t.queuedActions);t=[...t.queuedActions,{type:"CLEAR_QUEUED_ACTIONS"}].reduce(N,t),w("queued actions are dispatched and queue is cleared")}return t===r||U(t)||(t=N(t,{type:"UPDATE_LAST_VALID_CART"})),t}function N(t,e){w("processing requested action",e);const r=t.couponStatus;switch(e.type){case"UPDATE_LAST_VALID_CART":return{...t,lastValidResponseCart:u(t.responseCart)};case"FETCH_INITIAL_RESPONSE_CART":return{...t,cacheStatus:"fresh-pending",loadingError:void 0,loadingErrorType:void 0};case"CART_RELOAD":return w("reloading cart from server"),{...t,cacheStatus:"fresh",loadingError:void 0,loadingErrorType:void 0};case"CLEAR_MESSAGES":return{...t,responseCart:{...t.responseCart,messages:{errors:[],success:[]}}};case"CLEAR_QUEUED_ACTIONS":return{...t,queuedActions:[]};case"REMOVE_CART_ITEM":{const r=e.uuidToRemove;return w("removing item from cart with uuid",r),{...t,responseCart:p(t.responseCart,r),cacheStatus:"invalid",loadingError:void 0,loadingErrorType:void 0}}case"CART_PRODUCTS_ADD":return w("adding items to cart",e.products),{...t,responseCart:(n=t.responseCart,i=e.products,function(t,e){return t.some((t=>function(t,e){const r=e.products.some((t=>"renewal"===t.extra?.purchaseType));return!r&&"renewal"===t.extra?.purchaseType&&"domain_redemption"!==t.product_slug||!(!r||"renewal"===t.extra?.purchaseType)}(t,e)))}(i,n)?(a("items should replace response cart",i),h(n,i)):(a("items should not replace response cart",i),{...n,products:[...n.products,...i]})),cacheStatus:"invalid",loadingError:void 0,loadingErrorType:void 0};case"CART_PRODUCTS_REPLACE_ALL":return w("replacing items in cart with",e.products),{...t,responseCart:h(t.responseCart,e.products),cacheStatus:"invalid",loadingError:void 0,loadingErrorType:void 0};case"CART_PRODUCT_REPLACE":{const r=e.uuidToReplace;return function(t,e){return t.products.some((t=>d(t)&&Object.keys(e).every((r=>{const o=r;return t[o]===e[o]}))))}(t.responseCart,{uuid:r,...e.productPropertiesToChange})?(w("variant is already in cart; not submitting again"),t):(w(`replacing item with uuid ${r} with`,e.productPropertiesToChange),{...t,responseCart:C(t.responseCart,r,e.productPropertiesToChange),cacheStatus:"invalid",loadingError:void 0,loadingErrorType:void 0})}case"REMOVE_COUPON":return"applied"!==r?(w(`coupon status is '${r}'; not removing`),t):(w("removing coupon"),{...t,responseCart:(o=t.responseCart,{...o,coupon:"",is_coupon_applied:!1}),couponStatus:"fresh",cacheStatus:"invalid",loadingError:void 0,loadingErrorType:void 0});case"ADD_COUPON":{const o=e.couponToAdd;return"applied"!==r&&"pending"!==r||o!==t.responseCart.coupon?(w("adding coupon",o),{...t,responseCart:l(t.responseCart,o),couponStatus:"pending",cacheStatus:"invalid",loadingError:void 0,loadingErrorType:void 0}):(w(`coupon status is '${r}'; not submitting again`),t)}case"RECEIVE_INITIAL_RESPONSE_CART":{const o=e.initialResponseCart;return{...t,responseCart:o,couponStatus:q(r,o),cacheStatus:"valid",loadingError:void 0,loadingErrorType:void 0}}case"REQUEST_UPDATED_RESPONSE_CART":return{...t,cacheStatus:"pending",loadingError:void 0,loadingErrorType:void 0};case"RECEIVE_UPDATED_RESPONSE_CART":{const o=e.updatedResponseCart,n=q(r,o),a=o.cart_key,i=o.products.map((t=>t.product_slug));return"no-user"===a&&function(t){let e=null;try{e=JSON.parse(window.localStorage.getItem("shoppingCart")||"[]")}catch(t){return}if(!Array.isArray(e))return;const r=e.filter((e=>t.includes(e.product_slug)));try{window.localStorage.setItem("shoppingCart",JSON.stringify(r))}catch(t){return}}(i),{...t,responseCart:o,couponStatus:n,cacheStatus:"valid",loadingError:void 0,loadingErrorType:void 0}}case"RAISE_ERROR":switch(e.error){case"GET_SERVER_CART_ERROR":return{...t,cacheStatus:"error",loadingError:e.message||"Error while fetching the shopping cart. Please check your network connection and try again.",loadingErrorType:e.error};case"SET_SERVER_CART_ERROR":return{...t,cacheStatus:"error",loadingError:e.message||"Error while updating the shopping cart endpoint. Please check your network connection and try again.",loadingErrorType:e.error};default:return t}case"SET_LOCATION":return function(t,e){const{countryCode:r="",postalCode:o="",subdivisionCode:n="",vatId:a="",organization:i="",address:s="",city:c=""}=e,{country_code:u="",postal_code:d="",subdivision_code:p="",vat_id:l="",organization:_="",address:g="",city:E=""}=t.tax?.location??{};return void 0!==e.countryCode&&r!==u||void 0!==e.postalCode&&o!==d||void 0!==e.subdivisionCode&&n!==p||void 0!==e.vatId&&a!==l||void 0!==e.organization&&i!==_||void 0!==e.address&&s!==g||void 0!==e.city&&c!==E}(t.responseCart,e.location)?(w("changing location on cart from",t.responseCart.tax.location,"to",e.location),{...t,responseCart:_(t.responseCart,e.location),cacheStatus:"invalid",loadingError:void 0,loadingErrorType:void 0}):(w("cart location is the same; not updating"),t);default:return t}var o,n,i}function q(t,e){return e.is_coupon_applied?"applied":"pending"===t?"rejected":"fresh"}const V=n()("shopping-cart:state-based-actions");function j(t){let e;return(r,o)=>{e&&clearTimeout(e),e=setTimeout((()=>{V("cache status before state-based-actions is",r.cacheStatus),function(t,e,r){const{cacheStatus:o}=t;"fresh"===o&&(V("triggering fetch of initial cart"),e({type:"FETCH_INITIAL_RESPONSE_CART"}),r.fetchInitialCartFromServer(e))}(r,o,t),function(t,e,r){const{queuedActions:o,cacheStatus:n}=t;0===o.length&&"invalid"===n&&(V("triggering sync of cart to server"),e({type:"REQUEST_UPDATED_RESPONSE_CART"}),r.syncPendingCartToServer(t,e))}(r,o,t),V("running state-based-actions complete")}))}}var M=r("../packages/shopping-cart/src/cart-keys.ts");const $=n()("shopping-cart:sync"),z={blog_id:"",create_new_blog:!1,cart_generated_at_timestamp:0,cart_key:"no-site",products:[],total_tax:"0",total_tax_integer:0,total_tax_breakdown:[],total_cost:0,total_cost_integer:0,coupon_savings_total_integer:0,sub_total_with_taxes_integer:0,sub_total_integer:0,currency:"USD",credits_integer:0,allowed_payment_methods:[],coupon:"",is_coupon_applied:!1,coupon_discounts_integer:[],locale:"en-us",tax:{location:{},display_taxes:!1},is_signup:!1,next_domain_is_free:!1,next_domain_condition:""};function F(t,e,r){const o=M.e.includes(t),n=()=>o?Promise.resolve(z):e(t);return{syncPendingCartToServer(e,o){const n=function({products:t,coupon:e,tax:r}){let o=null;return(r.location.country_code||r.location.postal_code||r.location.subdivision_code||r.location.vat_id||r.location.organization||r.location.address||r.location.city)&&(o={location:{country_code:r.location.country_code,postal_code:r.location.postal_code,subdivision_code:r.location.subdivision_code,vat_id:r.location.vat_id,organization:r.location.organization,address:r.location.address,city:r.location.city}}),{products:t.map(c),coupon:e,temporary:!1,tax:o}}(e.responseCart);var a;$("sending edited cart to server",n),(a=n,r(t,a)).then((t=>{$("update cart request complete",n,"; updated cart is",t),o({type:"RECEIVE_UPDATED_RESPONSE_CART",updatedResponseCart:g(t)})})).catch((t=>{$("error while setting cart",t),o({type:"RAISE_ERROR",error:"SET_SERVER_CART_ERROR",message:t.message})}))},fetchInitialCartFromServer(t){$("fetching initial cart from server"),n().then((e=>{$("initialized cart is",e);const r=g(e);t({type:"RECEIVE_INITIAL_RESPONSE_CART",initialResponseCart:r})})).catch((e=>{$("error while initializing cart",e),t({type:"RAISE_ERROR",error:"GET_SERVER_CART_ERROR",message:e.message})}))}}}const K=n()("shopping-cart:shopping-cart-manager");function G(t){if(t.loadingError)return new R(t.loadingError,t.loadingErrorType);const e=t.responseCart.messages?.errors??[];if(e.length>0){const t=e[0];return new f(t.message,t.code)}}function Q(t,e,r){let o={responseCart:I,lastValidResponseCart:I,cacheStatus:"fresh",couponStatus:"fresh",queuedActions:[]};const n=function(t){let e=[];return{subscribe:r=>(m(`adding subscriber for cartKey ${t}`),e.push(r),()=>{m(`removing subscriber for cartKey ${t}`),e=e.filter((t=>t!==r))}),notifySubscribers:()=>{m(`notifying ${e.length} subscribers for cartKey ${t}`),e.forEach((t=>{try{t()}catch(t){throw console.error("An error ocurred while notifying a subscriber of a ShoppingCartManager change",t.message),t}})),m(`completed notification of subscribers for cartKey ${t}`)}}}(t),a=F(t,e,r),i=function(){let t=[];return{resolve(e){if(t.length>0){m(`resolving ${t.length} action promises`);const r=u(e);t.forEach((t=>t.resolve(r))),t=[]}},reject(e){t.length>0&&(m(`rejecting ${t.length} action promises`),t.forEach((t=>t.reject(e))),t=[])},add(e){t.push(e)}}}(),s=j(a),c=e=>{K(`dispatching action for cartKey ${t}`,e.type);const r=k(o,e),a=r!==o;if(o=r,"error"===o.cacheStatus&&(K("cache status is error, so rejecting action promises"),i.reject(new R(o.loadingError,o.loadingErrorType))),!U(o)){const t=G(o);t&&a?(K("no state updates pending and there is an error, so rejecting action promises"),i.reject(t)):(K("no state updates pending and there are no new errors, so resolving action promises"),i.resolve(o.responseCart))}a&&(s(o,c),n.notifySubscribers())},d=function(t,e){return r=>new Promise(((o,n)=>{e.add({resolve:o,reject:n}),t(r)}))}(c,i),p=function(t){return{reloadFromServer:()=>t({type:"CART_RELOAD"}),clearMessages:()=>t({type:"CLEAR_MESSAGES"}),removeCoupon:()=>t({type:"REMOVE_COUPON"}),addProductsToCart:async e=>t({type:"CART_PRODUCTS_ADD",products:(0,x.A)(e)}),removeProductFromCart:e=>t({type:"REMOVE_CART_ITEM",uuidToRemove:e}),replaceProductsInCart:async e=>t({type:"CART_PRODUCTS_REPLACE_ALL",products:(0,x.A)(e)}),replaceProductInCart:(e,r)=>t({type:"CART_PRODUCT_REPLACE",uuidToReplace:e,productPropertiesToChange:r}),updateLocation:e=>t({type:"SET_LOCATION",location:e}),applyCoupon:e=>t({type:"ADD_COUPON",couponToAdd:e})}}(d);let l=T(o),_=o;let g=!1;return{subscribe:n.subscribe,actions:p,getState:()=>(_!==o&&(l=T(o),_=o),l),fetchInitialCart:()=>{if(g){const t=G(o);return t?(K("initial fetch called but it already ran and the current state has an error"),Promise.reject(t)):(K("initial fetch called but it already ran; returning without doing anything"),Promise.resolve(o.lastValidResponseCart))}return g=!0,K("initial fetch called and has not been called before"),s(o,c),new Promise(((t,e)=>{i.add({resolve:t,reject:e})}))}}}function H({getCart:t,setCart:e}){const r=new Map;return{forCartKey:function(o){if(!o)return P;let n=r.get(o);return void 0===n&&(K(`creating cart manager for "${o}"`),n=Q(o,t,e),r.set(o,n)),n},getCartKeyForSiteSlug:e=>async function(t,e){try{return(await e(t)).cart_key}catch{return"no-site"}}(e,t)}}}}]);